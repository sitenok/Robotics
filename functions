#pragma config(Sensor, S1,     touchSensor,    sensorEV3_Touch)
#pragma config(Sensor, S2,     gyroSensor,     sensorEV3_Gyro, modeEV3Gyro_RateAndAngle)
#pragma config(Sensor, S3,     colorSensor,    sensorEV3_Color, modeEV3Color_Color)
#pragma config(Sensor, S4,     sonarSensor,    sensorEV3_Ultrasonic)
#pragma config(Motor,  motorA,          armMotor,      tmotorEV3_Large, PIDControl, encoder)
#pragma config(Motor,  motorB,          leftMotor,     tmotorEV3_Large, PIDControl, driveLeft, encoder)
#pragma config(Motor,  motorC,          rightMotor,    tmotorEV3_Large, PIDControl, driveRight, encoder)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

/*
  program that uses functions to reduce the number of lines for the code
*/


//function which moves the robot in a straight line ahead for 2 seconds
	void aheadstraightline()
{
	setMotorSpeed(leftMotor, 50);
	setMotorSpeed(rightMotor, 50);
	sleep(2000); //wait for 2 seconds before finishing the function
}

//function which moves the robot ahead in a straight line for 5 seconds at full power
	void aheadstraightline5()
{
	setMotorSpeed(leftMotor, 100);
	setMotorSpeed(rightMotor, 100);
	sleep(5000); //wait for 5 seconds before finishing the function
}

//function which moves the robot backwards at half power for 8.5 seconds	
	void backstraightline()
{
	setMotorSpeed(leftMotor, -50);
	setMotorSpeed(rightMotor, -50);
	sleep(8500); //wait for 8.5 seconds before finishing the function 
}

//function that turns the robot by 90 degrees to the right
	void turn90degreesRight()
{
	setMotorSpeed(leftMotor, 18);
	setMotorSpeed(rightMotor, -18);
	sleep(1000); //Wait for 1 second before finishing the function.
}

//function that turns the robot by 90 degrees to the left
	void turn90degreesLeft()
{
  	setMotorSpeed(leftMotor, -18);
	setMotorSpeed(rightMotor, 18);
	sleep(1000); //Wait for 1 second before finishing the function.
}

//function which calls other functions to make the robot move in a square route by only turning right
void squareToTheRight()
{
	//moving around in a square by turning right
	aheadstraightline();
	turn90degreesRight();
	aheadstraightline();
	turn90degreesRight();
	aheadstraightline();
	turn90degreesRight();
	aheadstraightline();
	turn90degreesRight();
}

//function which calls other functions to make the robot move in a square route by only turning left
void squareToTheLeft()
{
	//moving around in a square
	aheadstraightline();
	turn90degreesLeft();
	aheadstraightline();
	turn90degreesLeft();
	aheadstraightline();
	turn90degreesLeft();
	aheadstraightline();
	turn90degreesLeft();
}


task main()
{
	//randomly assigning i the value of 1 or 0
	int i = random(1);
	//if i is 1 it performs a square by turning right, otherwise it does it by turning left
	if (i == 1 )
	{
		squareToTheRight();	
	}
	else 
	{
		squareToTheLeft();		
	}
	
	//calling functions
	aheadstraightline5();
        backstraightline();

}
